<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cos_home.mapper.LableMapper" >

    <resultMap id="BaseResultMap" type="com.cos_home.entity.Lable" >
        <!--
        @mbggenerated
        -->
        <id column="dislable_id" property="dislableId" jdbcType="BIGINT" />
        <result column="dislable_name" property="dislableName" jdbcType="VARCHAR" />
        <result column="dislable_user_id" property="dislableUserId" jdbcType="BIGINT" />
        <result column="dislable_type" property="dislableType" jdbcType="INTEGER" />
        <result column="dislable_admin_id" property="dislableAdminId" jdbcType="BIGINT" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        <!--
        @mbggenerated
        -->
        dislable_id, dislable_name, dislable_user_id, dislable_type, dislable_admin_id
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cos_home.entity.LableExample" >
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from lable
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0" >
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from lable
        where dislable_id = #{dislableId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        delete from lable
        where dislable_id = #{dislableId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.cos_home.entity.LableExample" >
        <!--
        @mbggenerated
        -->
        delete from lable
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.cos_home.entity.Lable" >
        <!--
        @mbggenerated
        -->
        insert into lable (dislable_id, dislable_name, dislable_user_id, 
            dislable_type, dislable_admin_id)
        values (#{dislableId,jdbcType=BIGINT}, #{dislableName,jdbcType=VARCHAR}, #{dislableUserId,jdbcType=BIGINT}, 
            #{dislableType,jdbcType=INTEGER}, #{dislableAdminId,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.cos_home.entity.Lable" >
        <!--
        @mbggenerated
        -->
        insert into lable
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="dislableId != null" >
                dislable_id,
            </if>
            <if test="dislableName != null" >
                dislable_name,
            </if>
            <if test="dislableUserId != null" >
                dislable_user_id,
            </if>
            <if test="dislableType != null" >
                dislable_type,
            </if>
            <if test="dislableAdminId != null" >
                dislable_admin_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="dislableId != null" >
                #{dislableId,jdbcType=BIGINT},
            </if>
            <if test="dislableName != null" >
                #{dislableName,jdbcType=VARCHAR},
            </if>
            <if test="dislableUserId != null" >
                #{dislableUserId,jdbcType=BIGINT},
            </if>
            <if test="dislableType != null" >
                #{dislableType,jdbcType=INTEGER},
            </if>
            <if test="dislableAdminId != null" >
                #{dislableAdminId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.cos_home.entity.LableExample" resultType="java.lang.Integer" >
        <!--
        @mbggenerated
        -->
        select count(*) from lable
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update lable
        <set >
            <if test="record.dislableId != null" >
                dislable_id = #{record.dislableId,jdbcType=BIGINT},
            </if>
            <if test="record.dislableName != null" >
                dislable_name = #{record.dislableName,jdbcType=VARCHAR},
            </if>
            <if test="record.dislableUserId != null" >
                dislable_user_id = #{record.dislableUserId,jdbcType=BIGINT},
            </if>
            <if test="record.dislableType != null" >
                dislable_type = #{record.dislableType,jdbcType=INTEGER},
            </if>
            <if test="record.dislableAdminId != null" >
                dislable_admin_id = #{record.dislableAdminId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update lable
        set dislable_id = #{record.dislableId,jdbcType=BIGINT},
            dislable_name = #{record.dislableName,jdbcType=VARCHAR},
            dislable_user_id = #{record.dislableUserId,jdbcType=BIGINT},
            dislable_type = #{record.dislableType,jdbcType=INTEGER},
            dislable_admin_id = #{record.dislableAdminId,jdbcType=BIGINT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cos_home.entity.Lable" >
        <!--
        @mbggenerated
        -->
        update lable
        <set >
            <if test="dislableName != null" >
                dislable_name = #{dislableName,jdbcType=VARCHAR},
            </if>
            <if test="dislableUserId != null" >
                dislable_user_id = #{dislableUserId,jdbcType=BIGINT},
            </if>
            <if test="dislableType != null" >
                dislable_type = #{dislableType,jdbcType=INTEGER},
            </if>
            <if test="dislableAdminId != null" >
                dislable_admin_id = #{dislableAdminId,jdbcType=BIGINT},
            </if>
        </set>
        where dislable_id = #{dislableId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.cos_home.entity.Lable" >
        <!--
        @mbggenerated
        -->
        update lable
        set dislable_name = #{dislableName,jdbcType=VARCHAR},
            dislable_user_id = #{dislableUserId,jdbcType=BIGINT},
            dislable_type = #{dislableType,jdbcType=INTEGER},
            dislable_admin_id = #{dislableAdminId,jdbcType=BIGINT}
        where dislable_id = #{dislableId,jdbcType=BIGINT}
    </update>
</mapper>