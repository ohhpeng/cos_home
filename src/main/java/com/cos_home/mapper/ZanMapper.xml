<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cos_home.mapper.ZanMapper" >

    <resultMap id="BaseResultMap" type="com.cos_home.entity.Zan" >
        <!--
        @mbggenerated
        -->
        <id column="zan_id" property="zanId" jdbcType="BIGINT" />
        <result column="zan_user_id" property="zanUserId" jdbcType="BIGINT" />
        <result column="zan_target_user_id" property="zanTargetUserId" jdbcType="BIGINT" />
        <result column="zan_create_time" property="zanCreateTime" jdbcType="TIMESTAMP" />
        <result column="zan_state" property="zanState" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        <!--
        @mbggenerated
        -->
        zan_id, zan_user_id, zan_target_user_id, zan_create_time, zan_state
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cos_home.entity.ZanExample" >
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from zan
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0" >
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from zan
        where zan_id = #{zanId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        delete from zan
        where zan_id = #{zanId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.cos_home.entity.ZanExample" >
        <!--
        @mbggenerated
        -->
        delete from zan
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.cos_home.entity.Zan" >
        <!--
        @mbggenerated
        -->
        insert into zan (zan_id, zan_user_id, zan_target_user_id, 
            zan_create_time, zan_state)
        values (#{zanId,jdbcType=BIGINT}, #{zanUserId,jdbcType=BIGINT}, #{zanTargetUserId,jdbcType=BIGINT}, 
            #{zanCreateTime,jdbcType=TIMESTAMP}, #{zanState,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.cos_home.entity.Zan" >
        <!--
        @mbggenerated
        -->
        insert into zan
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="zanId != null" >
                zan_id,
            </if>
            <if test="zanUserId != null" >
                zan_user_id,
            </if>
            <if test="zanTargetUserId != null" >
                zan_target_user_id,
            </if>
            <if test="zanCreateTime != null" >
                zan_create_time,
            </if>
            <if test="zanState != null" >
                zan_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="zanId != null" >
                #{zanId,jdbcType=BIGINT},
            </if>
            <if test="zanUserId != null" >
                #{zanUserId,jdbcType=BIGINT},
            </if>
            <if test="zanTargetUserId != null" >
                #{zanTargetUserId,jdbcType=BIGINT},
            </if>
            <if test="zanCreateTime != null" >
                #{zanCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="zanState != null" >
                #{zanState,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.cos_home.entity.ZanExample" resultType="java.lang.Integer" >
        <!--
        @mbggenerated
        -->
        select count(*) from zan
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update zan
        <set >
            <if test="record.zanId != null" >
                zan_id = #{record.zanId,jdbcType=BIGINT},
            </if>
            <if test="record.zanUserId != null" >
                zan_user_id = #{record.zanUserId,jdbcType=BIGINT},
            </if>
            <if test="record.zanTargetUserId != null" >
                zan_target_user_id = #{record.zanTargetUserId,jdbcType=BIGINT},
            </if>
            <if test="record.zanCreateTime != null" >
                zan_create_time = #{record.zanCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.zanState != null" >
                zan_state = #{record.zanState,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update zan
        set zan_id = #{record.zanId,jdbcType=BIGINT},
            zan_user_id = #{record.zanUserId,jdbcType=BIGINT},
            zan_target_user_id = #{record.zanTargetUserId,jdbcType=BIGINT},
            zan_create_time = #{record.zanCreateTime,jdbcType=TIMESTAMP},
            zan_state = #{record.zanState,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cos_home.entity.Zan" >
        <!--
        @mbggenerated
        -->
        update zan
        <set >
            <if test="zanUserId != null" >
                zan_user_id = #{zanUserId,jdbcType=BIGINT},
            </if>
            <if test="zanTargetUserId != null" >
                zan_target_user_id = #{zanTargetUserId,jdbcType=BIGINT},
            </if>
            <if test="zanCreateTime != null" >
                zan_create_time = #{zanCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="zanState != null" >
                zan_state = #{zanState,jdbcType=INTEGER},
            </if>
        </set>
        where zan_id = #{zanId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.cos_home.entity.Zan" >
        <!--
        @mbggenerated
        -->
        update zan
        set zan_user_id = #{zanUserId,jdbcType=BIGINT},
            zan_target_user_id = #{zanTargetUserId,jdbcType=BIGINT},
            zan_create_time = #{zanCreateTime,jdbcType=TIMESTAMP},
            zan_state = #{zanState,jdbcType=INTEGER}
        where zan_id = #{zanId,jdbcType=BIGINT}
    </update>
</mapper>