<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cos_home.mapper.CollectionMapper" >

    <resultMap id="BaseResultMap" type="com.cos_home.entity.Collection" >
        <!--
        @mbggenerated
        -->
        <id column="collection_id" property="collectionId" jdbcType="BIGINT" />
        <result column="collection_type" property="collectionType" jdbcType="INTEGER" />
        <result column="collection_belong_id" property="collectionBelongId" jdbcType="BIGINT" />
        <result column="collection_user_id" property="collectionUserId" jdbcType="BIGINT" />
        <result column="collection_time" property="collectionTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        <!--
        @mbggenerated
        -->
        collection_id, collection_type, collection_belong_id, collection_user_id, collection_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cos_home.entity.CollectionExample" >
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from collection
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0" >
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from collection
        where collection_id = #{collectionId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        delete from collection
        where collection_id = #{collectionId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.cos_home.entity.CollectionExample" >
        <!--
        @mbggenerated
        -->
        delete from collection
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.cos_home.entity.Collection" >
        <!--
        @mbggenerated
        -->
        insert into collection (collection_id, collection_type, collection_belong_id, 
            collection_user_id, collection_time)
        values (#{collectionId,jdbcType=BIGINT}, #{collectionType,jdbcType=INTEGER}, #{collectionBelongId,jdbcType=BIGINT}, 
            #{collectionUserId,jdbcType=BIGINT}, #{collectionTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.cos_home.entity.Collection" >
        <!--
        @mbggenerated
        -->
        insert into collection
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="collectionId != null" >
                collection_id,
            </if>
            <if test="collectionType != null" >
                collection_type,
            </if>
            <if test="collectionBelongId != null" >
                collection_belong_id,
            </if>
            <if test="collectionUserId != null" >
                collection_user_id,
            </if>
            <if test="collectionTime != null" >
                collection_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="collectionId != null" >
                #{collectionId,jdbcType=BIGINT},
            </if>
            <if test="collectionType != null" >
                #{collectionType,jdbcType=INTEGER},
            </if>
            <if test="collectionBelongId != null" >
                #{collectionBelongId,jdbcType=BIGINT},
            </if>
            <if test="collectionUserId != null" >
                #{collectionUserId,jdbcType=BIGINT},
            </if>
            <if test="collectionTime != null" >
                #{collectionTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.cos_home.entity.CollectionExample" resultType="java.lang.Integer" >
        <!--
        @mbggenerated
        -->
        select count(*) from collection
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update collection
        <set >
            <if test="record.collectionId != null" >
                collection_id = #{record.collectionId,jdbcType=BIGINT},
            </if>
            <if test="record.collectionType != null" >
                collection_type = #{record.collectionType,jdbcType=INTEGER},
            </if>
            <if test="record.collectionBelongId != null" >
                collection_belong_id = #{record.collectionBelongId,jdbcType=BIGINT},
            </if>
            <if test="record.collectionUserId != null" >
                collection_user_id = #{record.collectionUserId,jdbcType=BIGINT},
            </if>
            <if test="record.collectionTime != null" >
                collection_time = #{record.collectionTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update collection
        set collection_id = #{record.collectionId,jdbcType=BIGINT},
            collection_type = #{record.collectionType,jdbcType=INTEGER},
            collection_belong_id = #{record.collectionBelongId,jdbcType=BIGINT},
            collection_user_id = #{record.collectionUserId,jdbcType=BIGINT},
            collection_time = #{record.collectionTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cos_home.entity.Collection" >
        <!--
        @mbggenerated
        -->
        update collection
        <set >
            <if test="collectionType != null" >
                collection_type = #{collectionType,jdbcType=INTEGER},
            </if>
            <if test="collectionBelongId != null" >
                collection_belong_id = #{collectionBelongId,jdbcType=BIGINT},
            </if>
            <if test="collectionUserId != null" >
                collection_user_id = #{collectionUserId,jdbcType=BIGINT},
            </if>
            <if test="collectionTime != null" >
                collection_time = #{collectionTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where collection_id = #{collectionId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.cos_home.entity.Collection" >
        <!--
        @mbggenerated
        -->
        update collection
        set collection_type = #{collectionType,jdbcType=INTEGER},
            collection_belong_id = #{collectionBelongId,jdbcType=BIGINT},
            collection_user_id = #{collectionUserId,jdbcType=BIGINT},
            collection_time = #{collectionTime,jdbcType=TIMESTAMP}
        where collection_id = #{collectionId,jdbcType=BIGINT}
    </update>
</mapper>