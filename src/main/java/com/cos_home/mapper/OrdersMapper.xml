<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cos_home.mapper.OrdersMapper" >

    <resultMap id="BaseResultMap" type="com.cos_home.entity.Orders" >
        <!--
        @mbggenerated
        -->
        <id column="order_id" property="orderId" jdbcType="BIGINT" />
        <result column="order_number" property="orderNumber" jdbcType="BIGINT" />
        <result column="order_service_id" property="orderServiceId" jdbcType="BIGINT" />
        <result column="order_user_id" property="orderUserId" jdbcType="BIGINT" />
        <result column="order_createtime" property="orderCreatetime" jdbcType="TIMESTAMP" />
        <result column="order_content" property="orderContent" jdbcType="VARCHAR" />
        <result column="order_presettime" property="orderPresettime" jdbcType="TIMESTAMP" />
        <result column="order_state" property="orderState" jdbcType="INTEGER" />
        <result column="order_serviceaddr" property="orderServiceaddr" jdbcType="VARCHAR" />
        <result column="order_is_del" property="orderIsDel" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <!--
        @mbggenerated
        -->
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        <!--
        @mbggenerated
        -->
        order_id, order_number, order_service_id, order_user_id, order_createtime, order_content, 
        order_presettime, order_state, order_serviceaddr, order_is_del
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cos_home.entity.OrdersExample" >
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from orders
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0" >
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        from orders
        where order_id = #{orderId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        <!--
        @mbggenerated
        -->
        delete from orders
        where order_id = #{orderId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.cos_home.entity.OrdersExample" >
        <!--
        @mbggenerated
        -->
        delete from orders
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.cos_home.entity.Orders" >
        <!--
        @mbggenerated
        -->
        insert into orders (order_id, order_number, order_service_id, 
            order_user_id, order_createtime, order_content, 
            order_presettime, order_state, order_serviceaddr, 
            order_is_del)
        values (#{orderId,jdbcType=BIGINT}, #{orderNumber,jdbcType=BIGINT}, #{orderServiceId,jdbcType=BIGINT}, 
            #{orderUserId,jdbcType=BIGINT}, #{orderCreatetime,jdbcType=TIMESTAMP}, #{orderContent,jdbcType=VARCHAR}, 
            #{orderPresettime,jdbcType=TIMESTAMP}, #{orderState,jdbcType=INTEGER}, #{orderServiceaddr,jdbcType=VARCHAR}, 
            #{orderIsDel,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.cos_home.entity.Orders" >
        <!--
        @mbggenerated
        -->
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderId != null" >
                order_id,
            </if>
            <if test="orderNumber != null" >
                order_number,
            </if>
            <if test="orderServiceId != null" >
                order_service_id,
            </if>
            <if test="orderUserId != null" >
                order_user_id,
            </if>
            <if test="orderCreatetime != null" >
                order_createtime,
            </if>
            <if test="orderContent != null" >
                order_content,
            </if>
            <if test="orderPresettime != null" >
                order_presettime,
            </if>
            <if test="orderState != null" >
                order_state,
            </if>
            <if test="orderServiceaddr != null" >
                order_serviceaddr,
            </if>
            <if test="orderIsDel != null" >
                order_is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderId != null" >
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="orderNumber != null" >
                #{orderNumber,jdbcType=BIGINT},
            </if>
            <if test="orderServiceId != null" >
                #{orderServiceId,jdbcType=BIGINT},
            </if>
            <if test="orderUserId != null" >
                #{orderUserId,jdbcType=BIGINT},
            </if>
            <if test="orderCreatetime != null" >
                #{orderCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderContent != null" >
                #{orderContent,jdbcType=VARCHAR},
            </if>
            <if test="orderPresettime != null" >
                #{orderPresettime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderState != null" >
                #{orderState,jdbcType=INTEGER},
            </if>
            <if test="orderServiceaddr != null" >
                #{orderServiceaddr,jdbcType=VARCHAR},
            </if>
            <if test="orderIsDel != null" >
                #{orderIsDel,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.cos_home.entity.OrdersExample" resultType="java.lang.Integer" >
        <!--
        @mbggenerated
        -->
        select count(*) from orders
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update orders
        <set >
            <if test="record.orderId != null" >
                order_id = #{record.orderId,jdbcType=BIGINT},
            </if>
            <if test="record.orderNumber != null" >
                order_number = #{record.orderNumber,jdbcType=BIGINT},
            </if>
            <if test="record.orderServiceId != null" >
                order_service_id = #{record.orderServiceId,jdbcType=BIGINT},
            </if>
            <if test="record.orderUserId != null" >
                order_user_id = #{record.orderUserId,jdbcType=BIGINT},
            </if>
            <if test="record.orderCreatetime != null" >
                order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.orderContent != null" >
                order_content = #{record.orderContent,jdbcType=VARCHAR},
            </if>
            <if test="record.orderPresettime != null" >
                order_presettime = #{record.orderPresettime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.orderState != null" >
                order_state = #{record.orderState,jdbcType=INTEGER},
            </if>
            <if test="record.orderServiceaddr != null" >
                order_serviceaddr = #{record.orderServiceaddr,jdbcType=VARCHAR},
            </if>
            <if test="record.orderIsDel != null" >
                order_is_del = #{record.orderIsDel,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        <!--
        @mbggenerated
        -->
        update orders
        set order_id = #{record.orderId,jdbcType=BIGINT},
            order_number = #{record.orderNumber,jdbcType=BIGINT},
            order_service_id = #{record.orderServiceId,jdbcType=BIGINT},
            order_user_id = #{record.orderUserId,jdbcType=BIGINT},
            order_createtime = #{record.orderCreatetime,jdbcType=TIMESTAMP},
            order_content = #{record.orderContent,jdbcType=VARCHAR},
            order_presettime = #{record.orderPresettime,jdbcType=TIMESTAMP},
            order_state = #{record.orderState,jdbcType=INTEGER},
            order_serviceaddr = #{record.orderServiceaddr,jdbcType=VARCHAR},
            order_is_del = #{record.orderIsDel,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cos_home.entity.Orders" >
        <!--
        @mbggenerated
        -->
        update orders
        <set >
            <if test="orderNumber != null" >
                order_number = #{orderNumber,jdbcType=BIGINT},
            </if>
            <if test="orderServiceId != null" >
                order_service_id = #{orderServiceId,jdbcType=BIGINT},
            </if>
            <if test="orderUserId != null" >
                order_user_id = #{orderUserId,jdbcType=BIGINT},
            </if>
            <if test="orderCreatetime != null" >
                order_createtime = #{orderCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderContent != null" >
                order_content = #{orderContent,jdbcType=VARCHAR},
            </if>
            <if test="orderPresettime != null" >
                order_presettime = #{orderPresettime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderState != null" >
                order_state = #{orderState,jdbcType=INTEGER},
            </if>
            <if test="orderServiceaddr != null" >
                order_serviceaddr = #{orderServiceaddr,jdbcType=VARCHAR},
            </if>
            <if test="orderIsDel != null" >
                order_is_del = #{orderIsDel,jdbcType=INTEGER},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.cos_home.entity.Orders" >
        <!--
        @mbggenerated
        -->
        update orders
        set order_number = #{orderNumber,jdbcType=BIGINT},
            order_service_id = #{orderServiceId,jdbcType=BIGINT},
            order_user_id = #{orderUserId,jdbcType=BIGINT},
            order_createtime = #{orderCreatetime,jdbcType=TIMESTAMP},
            order_content = #{orderContent,jdbcType=VARCHAR},
            order_presettime = #{orderPresettime,jdbcType=TIMESTAMP},
            order_state = #{orderState,jdbcType=INTEGER},
            order_serviceaddr = #{orderServiceaddr,jdbcType=VARCHAR},
            order_is_del = #{orderIsDel,jdbcType=INTEGER}
        where order_id = #{orderId,jdbcType=BIGINT}
    </update>
</mapper>